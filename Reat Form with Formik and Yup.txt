import { useFormik } from 'formik';
import * as Yup from 'yup';

function Form({ formData, setFormData, data, setData, edit, setEdit, selectedItem }) {

    const formik = useFormik({
        initialValues: {
            username: formData.username,
            password: formData.password,
            email: formData.email,
        },
        validationSchema: Yup.object({
            username: Yup.string()
                .max(10, 'Must be 10 characters or less')
                .required('Required'),
            password: Yup.string()
                .max(10, 'Must be 10 characters or less')
                .required('Required'),
            email: Yup.string().email('Invalid email address').required('Required'),
        }),
        onSubmit: (values) => {
            alert(JSON.stringify(values, null, 2));
            let newData = data;
            let newFormData = {
                username: "",
                password: "",
                email: ""
            };
            if (!edit) {
                newData = [...data, { id: data.length + 1, ...formData }];
            } else {
                newData = data.map((item) =>
                    item.id === selectedItem.id ? { ...formData } : item
                );
            }
            setData(newData);
            setFormData(newFormData);
            setEdit(false);
            //formik.resetForm();
        },
    });

    return (
        <>
            <form onSubmit={formik.handleSubmit}>
                <label htmlFor="username">Username</label><br />
                <input
                    type="text"
                    placeholder="username"
                    id="username"
                    name="username"
                    value={formik.values.username}
                    onChange={(e) => {
                        formik.handleChange(e);
                        setFormData({
                            ...formData,
                            [e.target.name]: e.target.value
                        });
                    }}
                    onBlur={formik.handleBlur}
                /><br />{formik.touched.username && formik.errors.username ? (
                    <div>{formik.errors.username}</div>
                ) : null}<br />
                <label htmlFor="password">Password</label><br />
                <input
                    type="password"
                    placeholder="password"
                    id="password"
                    name="password"
                    value={formik.values.password}
                    onChange={(e) => {
                        formik.handleChange(e);
                        setFormData({
                            ...formData,
                            [e.target.name]: e.target.value
                        });
                    }}
                    onBlur={formik.handleBlur}
                /><br />{formik.touched.password && formik.errors.password ? (
                    <div>{formik.errors.password}</div>
                ) : null}<br />
                <label htmlFor="email">Email</label><br />
                <input
                    type="email"
                    placeholder="email"
                    id="email"
                    name="email"
                    value={formik.values.email}
                    onChange={(e) => {
                        formik.handleChange(e);
                        setFormData({
                            ...formData,
                            [e.target.name]: e.target.value
                        });
                    }}
                    onBlur={formik.handleBlur}
                /><br />{formik.touched.email && formik.errors.email ? (
                    <div>{formik.errors.email}</div>
                ) : null}<br />
                <button type="submit">
                    {edit ? "Update" : "Add"}
                </button><br /><br />
            </form>
        </>
    )

}

export default Form
